


import numpy as np
import struct

recsize = 304   

def readTetrode(filename):

   with open(filename, 'rb') as f:  
    spikedata = f.read()[16384:]
    f.close()
    nevents=int(len(spikedata)/recsize)

    print("Number of spikes: {}".format(nevents))
    ts= np.zeros(nevents)
    dwScnumber = np.zeros(nevents)
    dwCellnumber = np.zeros(nevents)
    snData = np.zeros(32) 
    snD = []
 
    for i in range(nevents):
     recoffset=recsize*i
     dnParams = np.zeros(8)
     #print recoffset
     ts[i] = struct.unpack('Q', spikedata[recoffset:recoffset+8])[0]
     dwScnumber[i] = struct.unpack('I', spikedata[recoffset+8:recoffset+12])[0]
     dwCellnumber[i] = struct.unpack('I', spikedata[recoffset+12:recoffset+16])[0]
     dnParams = struct.unpack('8I', spikedata[recoffset+16:recoffset+48])[0]
     x=np.zeros(128)
     for j in range(128):
        x[j] = struct.unpack('h', spikedata[recoffset+48+(j*2):recoffset+48+(j*2)+2])[0]

     snD.append(x)

    waveforms = np.zeros([4,32,nevents])
    print("done with waveforms")

    for i in range(nevents):   
      waveforms[:,:,i] = snD[i].reshape([32,4]).transpose()

    return ts, waveforms
